// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveTrainLeftFornt;
std::shared_ptr<SpeedController> RobotMap::driveTrainRightFront;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive21;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainLeftFornt.reset(new Talon(0));
    lw->AddActuator("DriveTrain", "Left Front", std::static_pointer_cast<Talon>(driveTrainLeftFornt));
    
    driveTrainRightFront.reset(new Talon(1));
    lw->AddActuator("DriveTrain", "Right Front", std::static_pointer_cast<Talon>(driveTrainRightFront));
    
    driveTrainRobotDrive21.reset(new RobotDrive(driveTrainLeftFornt, driveTrainRightFront));
    
    driveTrainRobotDrive21->SetSafetyEnabled(false);
        driveTrainRobotDrive21->SetExpiration(0.1);
        driveTrainRobotDrive21->SetSensitivity(0.1);
        driveTrainRobotDrive21->SetMaxOutput(1.0);

        driveTrainRobotDrive21->SetInvertedMotor(RobotDrive::kRearRightMotor, true);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
